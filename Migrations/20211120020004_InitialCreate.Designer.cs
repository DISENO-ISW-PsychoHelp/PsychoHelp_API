// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsychoHelp_API.Persistence.Contexts;

namespace PsychoHelp_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211120020004_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("PsychoHelp_API.Appointments.Domain.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Motive")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("motive");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("PersonalHistory")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("personal_history");

                    b.Property<int>("PsychoId")
                        .HasColumnType("int")
                        .HasColumnName("psycho_id");

                    b.Property<string>("PsychoNotes")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("psycho_notes");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("schedule_date");

                    b.Property<string>("TestRealized")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("test_realized");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("treatment");

                    b.HasKey("Id")
                        .HasName("p_k_appointments");

                    b.HasIndex("PatientId")
                        .HasDatabaseName("i_x_appointments_patient_id");

                    b.HasIndex("PsychoId")
                        .HasDatabaseName("i_x_appointments_psycho_id");

                    b.ToTable("appointments");
                });

            modelBuilder.Entity("PsychoHelp_API.Psychologists.Domain.Model.Psychologist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("about");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("age");

                    b.Property<int>("Cmp")
                        .HasColumnType("int")
                        .HasColumnName("cmp");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Formation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("formation");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("genre");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<bool>("New")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("new");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("Phone")
                        .HasColumnType("int")
                        .HasColumnName("phone");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("session_type");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("specialization");

                    b.HasKey("Id")
                        .HasName("p_k_psychologists");

                    b.ToTable("psychologists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "I love my work as a therapist, I feel privileged to work on what I have studied so much for. This gives me a fresh and committed style when it comes to serving you.I highly value a sense of humor, creativity and wit when it comes to intervening.",
                            Active = false,
                            Age = "28/04/2001",
                            Cmp = 987456,
                            Dni = 12345678,
                            Email = "juangarcia@hotmail.com",
                            Formation = "Postgraduate course in sexual diversity and human rights - Universidad Alas Peruanas",
                            Genre = "Male",
                            Img = "https://bullseye-magazine.eu/wp-content/uploads/2019/09/portrait_test.jpg",
                            Name = "Juan Garcia",
                            New = false,
                            Password = "123456789",
                            Phone = 123456789,
                            SessionType = "Individual",
                            Specialization = "Esteem"
                        },
                        new
                        {
                            Id = 2,
                            About = "I am a happy and empathetic person. I enjoy meeting people from different cultures and discovering different ways of perceiving the world. I love listening to music and watching classic movies. I practice Yoga and Meditation in order to be more and more focused on the present moment.",
                            Active = false,
                            Age = "28/04/2001",
                            Cmp = 123456,
                            Dni = 12344569,
                            Email = "anaflores@hotmail.com",
                            Formation = "Bachelor of Psychology - Universidad Nacional Mayor de San Marcos",
                            Genre = "Female",
                            Img = "https://www.enseignemoi-files.com/site/view/images/dyn-cache/pages/image/img/12/20/1427215436_122008_1200x667x0.jpg?v=2018021301",
                            Name = "Ana Flores",
                            New = false,
                            Password = "ana123456",
                            Phone = 987456123,
                            SessionType = "Individual",
                            Specialization = "Esteem"
                        },
                        new
                        {
                            Id = 3,
                            About = "I am a person who enjoys the therapeutic space. I constantly seek to update myself, preserving the essence of psychotherapy, thus generating a warm relationship of respect and empathy, with a vision of growth for my patients.",
                            Active = false,
                            Age = "17/04/1996",
                            Cmp = 123456,
                            Dni = 72058669,
                            Email = "juanperez@hotmail.com",
                            Formation = "Bachelor of Psychology - Technological University of Peru",
                            Genre = "Male",
                            Img = "https://www.magisnet.com/wp-content/uploads/2021/04/Tal-BenShahar.jpg",
                            Name = "Juan Perez",
                            New = false,
                            Password = "juan1234",
                            Phone = 987489966,
                            SessionType = "Couple",
                            Specialization = "Depression"
                        },
                        new
                        {
                            Id = 4,
                            About = "Passionate about the social and human sciences that seek to understand the complexity of the human being, especially psychology and its various expressions. Lover of nature, plants, animals and my family. Any outdoor plan is always a good plan.",
                            Active = false,
                            Age = "18/11/1985",
                            Cmp = 123456,
                            Dni = 12344569,
                            Email = "silvia.m@hotmail.com",
                            Formation = "Bachelor of Psychology - Universidad Nacional Mayor de San Marcos",
                            Genre = "Female",
                            Img = "https://img.freepik.com/foto-gratis/mujer-hermosa-joven-mirando-camara-chica-moda-verano-casual-camiseta-blanca-pantalones-cortos-hembra-positiva-muestra-emociones-faciales-modelo-divertido-aislado-amarillo_158538-15796.jpg?size=626&ext=jpg",
                            Name = "Silvia Muñoz",
                            New = false,
                            Password = "sil123456",
                            Phone = 987456123,
                            SessionType = "Couple",
                            Specialization = "Codependency"
                        });
                });

            modelBuilder.Entity("PsychoHelp_API.Psychologists.Domain.Model.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("time");

                    b.HasKey("Id")
                        .HasName("p_k_schedules");

                    b.ToTable("schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Time = "8:00"
                        },
                        new
                        {
                            Id = 2,
                            Time = "9:00"
                        },
                        new
                        {
                            Id = 3,
                            Time = "10:00"
                        },
                        new
                        {
                            Id = 4,
                            Time = "11:00"
                        },
                        new
                        {
                            Id = 5,
                            Time = "12:00"
                        },
                        new
                        {
                            Id = 6,
                            Time = "16:00"
                        },
                        new
                        {
                            Id = 7,
                            Time = "17:00"
                        },
                        new
                        {
                            Id = 8,
                            Time = "18:00"
                        },
                        new
                        {
                            Id = 9,
                            Time = "19:00"
                        },
                        new
                        {
                            Id = 10,
                            Time = "20:00"
                        });
                });

            modelBuilder.Entity("PsychoHelp_API.Publications.Domain.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Img")
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<int>("PsychologistId")
                        .HasColumnType("int")
                        .HasColumnName("psychologist_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("p_k_publications");

                    b.HasIndex("PsychologistId")
                        .HasDatabaseName("i_x_publications_psychologist_id");

                    b.ToTable("publications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 10, 31, 22, 49, 49, 450, DateTimeKind.Local),
                            Description = "Anxiety is a mental problem that affects the health of many people. Anxiety is a feeling of fear, fear, and restlessness. It can make you sweat, feel restless and tense, and have palpitations. It can be a normal reaction to stress. For example, you may feel anxious when faced with a difficult problem at work, before taking an exam, or before making an important decision.",
                            Img = "https://estaticos.muyinteresante.es/media/cache/1140x_thumb/uploads/images/article/5e6b7bc55bafe86b2ccdb361/ansiedad-corona_0.jpg",
                            PsychologistId = 1,
                            Title = "How to beat anxiety?"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 10, 31, 22, 49, 49, 450, DateTimeKind.Local),
                            Description = "Depression is one of the most difficult mental problems to treat. That is why in this chapter we will teach you how to support a person who has symptoms of depression.",
                            Img = "https://assets.weforum.org/article/image/responsive_large_E79PmG1Oop_9P7-edBkH9JddpXUpnaVEz2cvg8KkYOE.jpg",
                            PsychologistId = 2,
                            Title = "How to help a person with depression?"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 10, 31, 22, 49, 49, 450, DateTimeKind.Local),
                            Description = "We can all recognize those emotions that we like, pleasant emotions. Who doesn't like to feel happy, excited, in love, etc. But on the other hand, we also recognize emotions that can be more uncomfortable, for example, sadness, shame, guilt and anger.",
                            Img = "https://gentequebrilla.azurewebsites.net/wp-content/uploads/2019/04/12014-1024x604.jpg",
                            PsychologistId = 2,
                            Title = "Learning about negative emotions"
                        });
                });

            modelBuilder.Entity("PsychoHelp_API.Publications.Domain.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("PublicationId")
                        .HasColumnType("int")
                        .HasColumnName("publication_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("p_k_tags");

                    b.HasIndex("PublicationId")
                        .HasDatabaseName("i_x_tags_publication_id");

                    b.ToTable("tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PublicationId = 1,
                            Text = "#anxiety"
                        },
                        new
                        {
                            Id = 2,
                            PublicationId = 1,
                            Text = "#fear"
                        },
                        new
                        {
                            Id = 3,
                            PublicationId = 2,
                            Text = "#depression"
                        },
                        new
                        {
                            Id = 4,
                            PublicationId = 2,
                            Text = "#sadness"
                        },
                        new
                        {
                            Id = 5,
                            PublicationId = 3,
                            Text = "#emotions"
                        },
                        new
                        {
                            Id = 6,
                            PublicationId = 3,
                            Text = "#negativity"
                        });
                });

            modelBuilder.Entity("PsychoHelp_API.patients.Domain.Models.Logbook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ConsultationReason")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("consultation_reason");

                    b.Property<string>("LogBookName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("log_book_name");

                    b.Property<string>("PublicHistory")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("public_history");

                    b.HasKey("Id")
                        .HasName("p_k_log_book");

                    b.ToTable("log_book");
                });

            modelBuilder.Entity("PsychoHelp_API.patients.Domain.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("Img")
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("last_name");

                    b.Property<int>("LogBookId")
                        .HasColumnType("int")
                        .HasColumnName("log_book_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.Property<long>("Phone")
                        .HasMaxLength(9)
                        .HasColumnType("bigint")
                        .HasColumnName("phone");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("p_k_patient");

                    b.ToTable("patient");
                });

            modelBuilder.Entity("PsychologistSchedule", b =>
                {
                    b.Property<int>("PsychologistsId")
                        .HasColumnType("int")
                        .HasColumnName("psychologists_id");

                    b.Property<int>("SchedulesId")
                        .HasColumnType("int")
                        .HasColumnName("schedules_id");

                    b.HasKey("PsychologistsId", "SchedulesId")
                        .HasName("p_k_psychologist_schedule");

                    b.HasIndex("SchedulesId")
                        .HasDatabaseName("i_x_psychologist_schedule_schedules_id");

                    b.ToTable("psychologist_schedule");
                });

            modelBuilder.Entity("PsychoHelp_API.Appointments.Domain.Models.Appointment", b =>
                {
                    b.HasOne("PsychoHelp_API.patients.Domain.Models.Patient", "patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("k_appointment_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsychoHelp_API.Psychologists.Domain.Model.Psychologist", "psychologist")
                        .WithMany("Appointments")
                        .HasForeignKey("PsychoId")
                        .HasConstraintName("k_appointment_psycho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patient");

                    b.Navigation("psychologist");
                });

            modelBuilder.Entity("PsychoHelp_API.Publications.Domain.Models.Publication", b =>
                {
                    b.HasOne("PsychoHelp_API.Psychologists.Domain.Model.Psychologist", "Psychologist")
                        .WithMany("Publications")
                        .HasForeignKey("PsychologistId")
                        .HasConstraintName("f_k_publications_psychologists_psychologist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("PsychoHelp_API.Publications.Domain.Models.Tag", b =>
                {
                    b.HasOne("PsychoHelp_API.Publications.Domain.Models.Publication", "Publication")
                        .WithMany("Tags")
                        .HasForeignKey("PublicationId")
                        .HasConstraintName("f_k_tags_publications_publication_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("PsychoHelp_API.patients.Domain.Models.Logbook", b =>
                {
                    b.HasOne("PsychoHelp_API.patients.Domain.Models.Patient", "Patient")
                        .WithOne("Logbook")
                        .HasForeignKey("PsychoHelp_API.patients.Domain.Models.Logbook", "Id")
                        .HasConstraintName("f_k_log_book__patient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PsychologistSchedule", b =>
                {
                    b.HasOne("PsychoHelp_API.Psychologists.Domain.Model.Psychologist", null)
                        .WithMany()
                        .HasForeignKey("PsychologistsId")
                        .HasConstraintName("f_k_psychologist_schedule_psychologists_psychologists_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsychoHelp_API.Psychologists.Domain.Model.Schedule", null)
                        .WithMany()
                        .HasForeignKey("SchedulesId")
                        .HasConstraintName("f_k_psychologist_schedule_schedules_schedules_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PsychoHelp_API.Psychologists.Domain.Model.Psychologist", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Publications");
                });

            modelBuilder.Entity("PsychoHelp_API.Publications.Domain.Models.Publication", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("PsychoHelp_API.patients.Domain.Models.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Logbook");
                });
#pragma warning restore 612, 618
        }
    }
}
